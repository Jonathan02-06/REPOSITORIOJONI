{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jonat\\\\Desktop\\\\REPOSITORIOJONI\\\\DRAGONBALLFINAL\\\\proyecto-final\\\\src\\\\contexts\\\\CartContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useReducer, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nconst initialState = {\n  cart: []\n};\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      {\n        const exists = state.cart.find(item => item.id === action.payload.id);\n        if (exists) {\n          return {\n            cart: state.cart.map(item => item.id === action.payload.id ? {\n              ...item,\n              quantity: item.quantity + 1\n            } : item)\n          };\n        }\n        return {\n          cart: [...state.cart, {\n            ...action.payload,\n            quantity: 1\n          }]\n        };\n      }\n    case \"REMOVE_FROM_CART\":\n      return {\n        cart: state.cart.filter(item => item.id !== action.payload)\n      };\n    case \"UPDATE_QUANTITY\":\n      return {\n        cart: state.cart.map(item => item.id === action.payload.id ? {\n          ...item,\n          quantity: action.payload.quantity\n        } : item)\n      };\n    case \"CLEAR_CART\":\n      return {\n        cart: []\n      };\n    default:\n      return state;\n  }\n};\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(cartReducer, initialState, initial => {\n    const savedCart = localStorage.getItem(\"cart\");\n    return savedCart ? {\n      cart: JSON.parse(savedCart)\n    } : initial;\n  });\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(state.cart));\n  }, [state.cart]);\n  const addToCart = item => {\n    dispatch({\n      type: \"ADD_TO_CART\",\n      payload: item\n    });\n  };\n  const removeFromCart = id => {\n    dispatch({\n      type: \"REMOVE_FROM_CART\",\n      payload: id\n    });\n  };\n  const updateQuantity = (id, quantity) => {\n    dispatch({\n      type: \"UPDATE_QUANTITY\",\n      payload: {\n        id,\n        quantity\n      }\n    });\n  };\n  const clearCart = () => {\n    dispatch({\n      type: \"CLEAR_CART\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart: state.cart,\n      addToCart,\n      removeFromCart,\n      updateQuantity,\n      clearCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = CartProvider;\nexport default CartContext;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useReducer","useEffect","jsxDEV","_jsxDEV","CartContext","initialState","cart","cartReducer","state","action","type","exists","find","item","id","payload","map","quantity","filter","CartProvider","children","_s","dispatch","initial","savedCart","localStorage","getItem","JSON","parse","setItem","stringify","addToCart","removeFromCart","updateQuantity","clearCart","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jonat/Desktop/REPOSITORIOJONI/DRAGONBALLFINAL/proyecto-final/src/contexts/CartContext.js"],"sourcesContent":["import React, { createContext, useReducer, useEffect } from \"react\";\r\n\r\nexport const CartContext = createContext();\r\n\r\nconst initialState = { cart: [] };\r\n\r\nconst cartReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TO_CART\": {\r\n      const exists = state.cart.find(item => item.id === action.payload.id);\r\n      if (exists) {\r\n        return {\r\n          cart: state.cart.map(item =>\r\n            item.id === action.payload.id ? { ...item, quantity: item.quantity + 1 } : item\r\n          )\r\n        };\r\n      }\r\n      return { cart: [...state.cart, { ...action.payload, quantity: 1 }] };\r\n    }\r\n    case \"REMOVE_FROM_CART\":\r\n      return { cart: state.cart.filter(item => item.id !== action.payload) };\r\n    case \"UPDATE_QUANTITY\":\r\n      return {\r\n        cart: state.cart.map(item =>\r\n          item.id === action.payload.id ? { ...item, quantity: action.payload.quantity } : item\r\n        )\r\n      };\r\n    case \"CLEAR_CART\":\r\n      return { cart: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(cartReducer, initialState, (initial) => {\r\n    const savedCart = localStorage.getItem(\"cart\");\r\n    return savedCart ? { cart: JSON.parse(savedCart) } : initial;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"cart\", JSON.stringify(state.cart));\r\n  }, [state.cart]);\r\n\r\n  const addToCart = (item) => {\r\n    dispatch({ type: \"ADD_TO_CART\", payload: item });\r\n  };\r\n\r\n  const removeFromCart = (id) => {\r\n    dispatch({ type: \"REMOVE_FROM_CART\", payload: id });\r\n  };\r\n\r\n  const updateQuantity = (id, quantity) => {\r\n    dispatch({ type: \"UPDATE_QUANTITY\", payload: { id, quantity } });\r\n  };\r\n\r\n  const clearCart = () => {\r\n    dispatch({ type: \"CLEAR_CART\" });\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{ cart: state.cart, addToCart, removeFromCart, updateQuantity, clearCart }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}