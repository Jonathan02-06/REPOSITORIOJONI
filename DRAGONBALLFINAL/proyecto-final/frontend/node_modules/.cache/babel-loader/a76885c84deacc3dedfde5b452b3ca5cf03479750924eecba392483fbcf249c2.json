{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jonat\\\\Desktop\\\\REPOSITORIOJONI\\\\DRAGONBALLFINAL\\\\proyecto-final\\\\src\\\\pages\\\\Orders.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport \"./Orders.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Orders = () => {\n  _s();\n  // Estado inicial con algunos pedidos simulados\n  const [orders, setOrders] = useState([{\n    id: 1,\n    customer: \"Jonathan\",\n    total: \"$150\"\n  }, {\n    id: 2,\n    customer: \"Alice\",\n    total: \"$230\"\n  }]);\n\n  // Estado para el nuevo pedido a crear\n  const [newOrder, setNewOrder] = useState({\n    customer: \"\",\n    total: \"\"\n  });\n\n  // Maneja el cambio en los inputs del formulario\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewOrder({\n      ...newOrder,\n      [name]: value\n    });\n  };\n\n  // Función para agregar un nuevo pedido\n  const handleCreateOrder = e => {\n    e.preventDefault();\n    // Verificamos que ambos campos estén completos\n    if (newOrder.customer && newOrder.total) {\n      // Genera un id simple (puede ser mejorado en producción)\n      const newId = orders.length ? orders[orders.length - 1].id + 1 : 1;\n      const orderToAdd = {\n        id: newId,\n        customer: newOrder.customer,\n        total: newOrder.total\n      };\n      setOrders([...orders, orderToAdd]);\n      // Limpiamos el formulario\n      setNewOrder({\n        customer: \"\",\n        total: \"\"\n      });\n    } else {\n      alert(\"Por favor, complete todos los campos.\");\n    }\n  };\n\n  // Función para eliminar un pedido\n  const handleDelete = id => {\n    if (window.confirm(\"¿Eliminar orden?\")) {\n      setOrders(orders.filter(order => order.id !== id));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\xD3rdenes / Transacciones\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreateOrder,\n      className: \"order-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Crear Nuevo Pedido\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"customer\",\n        placeholder: \"Nombre del Cliente\",\n        value: newOrder.customer,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"total\",\n        placeholder: \"Total del Pedido\",\n        value: newOrder.total,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Crear Pedido\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"orders-list\",\n      children: orders.map(order => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"order-item\",\n        children: [\"Orden #\", order.id, \" de \", order.customer, \" - Total: \", order.total, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(order.id),\n          children: \"Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, order.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Orders, \"YtsOllrd0qiyWE+w5mWsNGN72Ck=\");\n_c = Orders;\nexport default Orders;\nvar _c;\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"names":["React","useState","Layout","jsxDEV","_jsxDEV","Orders","_s","orders","setOrders","id","customer","total","newOrder","setNewOrder","handleInputChange","e","name","value","target","handleCreateOrder","preventDefault","newId","length","orderToAdd","alert","handleDelete","window","confirm","filter","order","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","type","placeholder","onChange","required","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jonat/Desktop/REPOSITORIOJONI/DRAGONBALLFINAL/proyecto-final/src/pages/Orders.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Layout from \"../components/layout/Layout\";\r\nimport \"./Orders.css\";\r\n\r\nconst Orders = () => {\r\n  // Estado inicial con algunos pedidos simulados\r\n  const [orders, setOrders] = useState([\r\n    { id: 1, customer: \"Jonathan\", total: \"$150\" },\r\n    { id: 2, customer: \"Alice\", total: \"$230\" },\r\n  ]);\r\n\r\n  // Estado para el nuevo pedido a crear\r\n  const [newOrder, setNewOrder] = useState({\r\n    customer: \"\",\r\n    total: \"\",\r\n  });\r\n\r\n  // Maneja el cambio en los inputs del formulario\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewOrder({\r\n      ...newOrder,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // Función para agregar un nuevo pedido\r\n  const handleCreateOrder = (e) => {\r\n    e.preventDefault();\r\n    // Verificamos que ambos campos estén completos\r\n    if (newOrder.customer && newOrder.total) {\r\n      // Genera un id simple (puede ser mejorado en producción)\r\n      const newId = orders.length ? orders[orders.length - 1].id + 1 : 1;\r\n      const orderToAdd = {\r\n        id: newId,\r\n        customer: newOrder.customer,\r\n        total: newOrder.total,\r\n      };\r\n      setOrders([...orders, orderToAdd]);\r\n      // Limpiamos el formulario\r\n      setNewOrder({ customer: \"\", total: \"\" });\r\n    } else {\r\n      alert(\"Por favor, complete todos los campos.\");\r\n    }\r\n  };\r\n\r\n  // Función para eliminar un pedido\r\n  const handleDelete = (id) => {\r\n    if (window.confirm(\"¿Eliminar orden?\")) {\r\n      setOrders(orders.filter((order) => order.id !== id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <h2>Órdenes / Transacciones</h2>\r\n\r\n      {/* Formulario para crear un nuevo pedido */}\r\n      <form onSubmit={handleCreateOrder} className=\"order-form\">\r\n        <h3>Crear Nuevo Pedido</h3>\r\n        <input\r\n          type=\"text\"\r\n          name=\"customer\"\r\n          placeholder=\"Nombre del Cliente\"\r\n          value={newOrder.customer}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"total\"\r\n          placeholder=\"Total del Pedido\"\r\n          value={newOrder.total}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n        <button type=\"submit\">Crear Pedido</button>\r\n      </form>\r\n\r\n      {/* Listado de pedidos */}\r\n      <ul className=\"orders-list\">\r\n        {orders.map((order) => (\r\n          <li key={order.id} className=\"order-item\">\r\n            Orden #{order.id} de {order.customer} - Total: {order.total}\r\n            <button onClick={() => handleDelete(order.id)}>Eliminar</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}