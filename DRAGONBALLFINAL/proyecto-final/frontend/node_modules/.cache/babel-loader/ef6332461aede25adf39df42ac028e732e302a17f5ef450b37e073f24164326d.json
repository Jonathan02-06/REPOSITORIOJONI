{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jonat\\\\Desktop\\\\REPOSITORIOJONI\\\\DRAGONBALLFINAL\\\\proyecto-final\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// src/contexts/AuthContext.js\nimport React, { createContext, useReducer, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nconst initialState = {\n  user: null\n};\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n      return {\n        user: action.payload\n      };\n    case \"LOGOUT\":\n      return {\n        user: null\n      };\n    default:\n      return state;\n  }\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState, () => {\n    const storedUser = localStorage.getItem(\"user\");\n    return storedUser ? {\n      user: JSON.parse(storedUser)\n    } : initialState;\n  });\n  useEffect(() => {\n    localStorage.setItem(\"user\", JSON.stringify(state.user));\n  }, [state.user]);\n  const login = async ({\n    username,\n    password\n  }) => {\n    // Normalizamos el username a minúsculas para consistencia\n    const normalizedUsername = username.toLowerCase();\n    // Aquí se simula el login; en una app real llamarías a tu backend\n    if (normalizedUsername === \"jonathan\" && password === \"1234\") {\n      const userData = {\n        username: normalizedUsername,\n        token: \"dummy-token\"\n      };\n      dispatch({\n        type: \"LOGIN_SUCCESS\",\n        payload: userData\n      });\n      return {\n        success: true\n      };\n    } else {\n      return {\n        success: false,\n        error: \"Credenciales inválidas\"\n      };\n    }\n  };\n  const logout = () => {\n    dispatch({\n      type: \"LOGOUT\"\n    });\n    localStorage.removeItem(\"user\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: state.user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useReducer","useEffect","jsxDEV","_jsxDEV","AuthContext","initialState","user","authReducer","state","action","type","payload","AuthProvider","children","_s","dispatch","storedUser","localStorage","getItem","JSON","parse","setItem","stringify","login","username","password","normalizedUsername","toLowerCase","userData","token","success","error","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jonat/Desktop/REPOSITORIOJONI/DRAGONBALLFINAL/proyecto-final/frontend/src/contexts/AuthContext.js"],"sourcesContent":["// src/contexts/AuthContext.js\r\nimport React, { createContext, useReducer, useEffect } from \"react\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst initialState = { user: null };\r\n\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_SUCCESS\":\r\n      return { user: action.payload };\r\n    case \"LOGOUT\":\r\n      return { user: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState, () => {\r\n    const storedUser = localStorage.getItem(\"user\");\r\n    return storedUser ? { user: JSON.parse(storedUser) } : initialState;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"user\", JSON.stringify(state.user));\r\n  }, [state.user]);\r\n\r\n  const login = async ({ username, password }) => {\r\n    // Normalizamos el username a minúsculas para consistencia\r\n    const normalizedUsername = username.toLowerCase();\r\n    // Aquí se simula el login; en una app real llamarías a tu backend\r\n    if (normalizedUsername === \"jonathan\" && password === \"1234\") {\r\n      const userData = { username: normalizedUsername, token: \"dummy-token\" };\r\n      dispatch({ type: \"LOGIN_SUCCESS\", payload: userData });\r\n      return { success: true };\r\n    } else {\r\n      return { success: false, error: \"Credenciales inválidas\" };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    dispatch({ type: \"LOGOUT\" });\r\n    localStorage.removeItem(\"user\");\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user: state.user, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,MAAMM,YAAY,GAAG;EAAEC,IAAI,EAAE;AAAK,CAAC;AAEnC,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,eAAe;MAClB,OAAO;QAAEJ,IAAI,EAAEG,MAAM,CAACE;MAAQ,CAAC;IACjC,KAAK,QAAQ;MACX,OAAO;QAAEL,IAAI,EAAE;MAAK,CAAC;IACvB;MACE,OAAOE,KAAK;EAChB;AACF,CAAC;AAED,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACN,KAAK,EAAEO,QAAQ,CAAC,GAAGf,UAAU,CAACO,WAAW,EAAEF,YAAY,EAAE,MAAM;IACpE,MAAMW,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,OAAOF,UAAU,GAAG;MAAEV,IAAI,EAAEa,IAAI,CAACC,KAAK,CAACJ,UAAU;IAAE,CAAC,GAAGX,YAAY;EACrE,CAAC,CAAC;EAEFJ,SAAS,CAAC,MAAM;IACdgB,YAAY,CAACI,OAAO,CAAC,MAAM,EAAEF,IAAI,CAACG,SAAS,CAACd,KAAK,CAACF,IAAI,CAAC,CAAC;EAC1D,CAAC,EAAE,CAACE,KAAK,CAACF,IAAI,CAAC,CAAC;EAEhB,MAAMiB,KAAK,GAAG,MAAAA,CAAO;IAAEC,QAAQ;IAAEC;EAAS,CAAC,KAAK;IAC9C;IACA,MAAMC,kBAAkB,GAAGF,QAAQ,CAACG,WAAW,CAAC,CAAC;IACjD;IACA,IAAID,kBAAkB,KAAK,UAAU,IAAID,QAAQ,KAAK,MAAM,EAAE;MAC5D,MAAMG,QAAQ,GAAG;QAAEJ,QAAQ,EAAEE,kBAAkB;QAAEG,KAAK,EAAE;MAAc,CAAC;MACvEd,QAAQ,CAAC;QAAEL,IAAI,EAAE,eAAe;QAAEC,OAAO,EAAEiB;MAAS,CAAC,CAAC;MACtD,OAAO;QAAEE,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,MAAM;MACL,OAAO;QAAEA,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAyB,CAAC;IAC5D;EACF,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBjB,QAAQ,CAAC;MAAEL,IAAI,EAAE;IAAS,CAAC,CAAC;IAC5BO,YAAY,CAACgB,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAED,oBACE9B,OAAA,CAACC,WAAW,CAAC8B,QAAQ;IAACC,KAAK,EAAE;MAAE7B,IAAI,EAAEE,KAAK,CAACF,IAAI;MAAEiB,KAAK;MAAES;IAAO,CAAE;IAAAnB,QAAA,EAC9DA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACzB,EAAA,CAjCWF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAmCzB,eAAeR,WAAW;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}